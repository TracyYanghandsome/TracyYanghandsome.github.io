<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Trevor&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-05T07:39:52.492Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Trevor</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>让Curl在Mac上支持HTTPS</title>
    <link href="http://yoursite.com/2017/09/30/%E8%AE%A9Curl%E5%9C%A8Mac%E6%94%AF%E6%8C%81HTTPS/"/>
    <id>http://yoursite.com/2017/09/30/让Curl在Mac支持HTTPS/</id>
    <published>2017-09-30T00:52:58.000Z</published>
    <updated>2018-02-05T07:39:52.492Z</updated>
    
    <content type="html"><![CDATA[<p>curl默认安装的话，是不支持https，当你在使用libcurl去访问https时，就会报以下的错误</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/2026783-40ab6b095966b84f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="EDBBC8D8-A1AB-4B35-A6AF-2A3D6896F6BF.png" title="">
                </div>
                <div class="image-caption">EDBBC8D8-A1AB-4B35-A6AF-2A3D6896F6BF.png</div>
            </figure>
<p>如果curl要支持https，就必须先安装openssl。因为Mac是自带openssl的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/2026783-e3ab139ef5ff353e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="91C08D47-AC04-46A9-B7F3-BDB90A72864F.png" title="">
                </div>
                <div class="image-caption">91C08D47-AC04-46A9-B7F3-BDB90A72864F.png</div>
            </figure>
<p>所以我们只要cd到curl-7.56.1根目录下执行一下命令开启SSL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure --with-darwinssl</div></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/2026783-b2f7939074deaef0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="9821D406-874A-4FDE-B44D-E5D76CB028A6.png" title="">
                </div>
                <div class="image-caption">9821D406-874A-4FDE-B44D-E5D76CB028A6.png</div>
            </figure>
<p>接下来会输出很多，这里我们不用管，看最后一条Message出现HTTPS就OK了。</p>
<h2 id="Protocols-DICT-FILE-FTP-FTPS-GOPHER-HTTP-HTTPS-IMAP-IMAPS-LDAP-LDAPS-POP3-POP3S-RTSP-SMB-SMBS-SMTP-SMTPS-TELNET-TFTP"><a href="#Protocols-DICT-FILE-FTP-FTPS-GOPHER-HTTP-HTTPS-IMAP-IMAPS-LDAP-LDAPS-POP3-POP3S-RTSP-SMB-SMBS-SMTP-SMTPS-TELNET-TFTP" class="headerlink" title="######Protocols:        DICT FILE FTP FTPS GOPHER HTTP HTTPS IMAP IMAPS LDAP LDAPS POP3 POP3S RTSP SMB SMBS SMTP SMTPS TELNET TFTP"></a>######Protocols:        DICT FILE FTP FTPS GOPHER HTTP HTTPS IMAP IMAPS LDAP LDAPS POP3 POP3S RTSP SMB SMBS SMTP SMTPS TELNET TFTP</h2><p>然后重新执行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo make install</div></pre></td></tr></table></figure></p>
<p>检查是否成功:</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/2026783-1bc32fd4d3af13ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="9CFE5928-64AF-483E-BF32-972C33208A91.png" title="">
                </div>
                <div class="image-caption">9CFE5928-64AF-483E-BF32-972C33208A91.png</div>
            </figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;curl默认安装的话，是不支持https，当你在使用libcurl去访问https时，就会报以下的错误&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
        
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Python判断网页编码格式</title>
    <link href="http://yoursite.com/2017/09/20/Python%E5%88%A4%E6%96%AD%E7%BD%91%E9%A1%B5%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/09/20/Python判断网页编码格式/</id>
    <published>2017-09-20T06:32:18.000Z</published>
    <updated>2018-02-05T08:13:39.496Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Python爬取网页时，经常会遇到编码格式的问题，这里介绍下获取网页编码格式的几种方法。</p>
<p>######一.使用urllib模块的<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">import urllib</div><div class="line">html = urllib.urlopen(&apos;http://www.baidu.com&apos;).info()</div><div class="line">print html.getparam(&apos;charset&apos;)</div></pre></td></tr></table></figure></p>
<p>######二.使用chardet模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">import chardet </div><div class="line">import urllib</div><div class="line">#先获取网页内容</div><div class="line">html = urllib.urlopen(&apos;http://www.baidu.com&apos;).read()</div><div class="line">#用chardet进行内容分析</div><div class="line">chardit1 = chardet.detect(html)</div><div class="line">print chardit1[&apos;encoding&apos;]</div></pre></td></tr></table></figure></p>
<p>######三.利用BeautifulSoup模块方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">from bs4 import BeautifulSoup</div><div class="line">import urllib2</div><div class="line">content = urllib2.urlopen(&apos;http://www.baidu.com&apos;)</div><div class="line">soup = BeautifulSoup(content)</div><div class="line">print soup.original_encoding #这里的输出就是网页的编码方式</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用Python爬取网页时，经常会遇到编码格式的问题，这里介绍下获取网页编码格式的几种方法。&lt;/p&gt;
&lt;p&gt;######一.使用urllib模块的&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Pip常用命令</title>
    <link href="http://yoursite.com/2017/09/03/Pip%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/09/03/Pip常用命令/</id>
    <published>2017-09-03T00:22:18.000Z</published>
    <updated>2018-02-05T07:44:10.024Z</updated>
    
    <content type="html"><![CDATA[<p>#####列出已安装的包<br><figure class="highlight plain"><figcaption><span>list``` or ```pip freeze```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#####导出requirements.txt</div></pre></td></tr></table></figure></p>
<p>pip freeze &gt; &lt;目录&gt;/requirements.txt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#####安装包</div><div class="line">######在线安装</div><div class="line">```pip install &lt;包名&gt;``` or ```pip install -r requirements.txt</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 安装1.9版本的django</div><div class="line">pip install django==1.9</div><div class="line"># 安装版本号大于1.9的django，注意有引号</div><div class="line">pip install &quot;django&gt;1.9&quot;</div><div class="line">pip install &quot;django&gt;=1.9&quot;</div><div class="line">pip install &quot;django&lt;1.9&quot;</div><div class="line">pip install &quot;django&lt;=1.9&quot;</div><div class="line">pip install &quot;django&gt;&lt;1.9&quot;</div></pre></td></tr></table></figure>
<p>requirements.txt内容格式为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">APScheduler==2.1.2</div><div class="line">Django==1.5.4</div><div class="line">MySQL-Connector-Python==2.0.1</div><div class="line">MySQL-python==1.2.3</div><div class="line">PIL==1.1.7</div><div class="line">South==1.0.2</div><div class="line">django-grappelli==2.6.3</div><div class="line">django-pagination==1.0.7</div></pre></td></tr></table></figure></p>
<p>######安装本地安装包<br><figure class="highlight plain"><figcaption><span>install <目录>/<文件名>``` or ```pip install --use-wheel --no-index --find-links=wheelhouse/ <包名>```</包名></文件名></目录></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">可简写为:</div></pre></td></tr></table></figure></p>
<p>pip install –no-index -f=&lt;目录&gt;/ &lt;包名&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">######卸载包</div><div class="line">```pip uninstall &lt;包名&gt;``` or ```pip uninstall -r requirements.txt</div></pre></td></tr></table></figure></p>
<p>######升级包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install -U &lt;包名&gt;</div></pre></td></tr></table></figure></p>
<p>######升级pip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install -U pip</div></pre></td></tr></table></figure></p>
<p>######显示包所在的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip show -f &lt;包名&gt;</div></pre></td></tr></table></figure></p>
<p>######搜索包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip search &lt;搜索关键字&gt;</div></pre></td></tr></table></figure></p>
<p>######查询可升级的包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip list -o</div></pre></td></tr></table></figure></p>
<p>######下载包而不安装<br><figure class="highlight plain"><figcaption><span>install <包名> -d <目录>``` or ```pip install -d <目录> -r requirements.txt```</目录></目录></包名></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">######打包</div></pre></td></tr></table></figure></p>
<p>pip wheel &lt;包名&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#####更换国内pypi镜像</div><div class="line">#####国内pypi镜像</div><div class="line">豆瓣：[https://pypi.douban.com/simple](https://pypi.douban.com/simple)</div><div class="line">中国科学技术大学：[https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/](https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/)</div><div class="line">清华大学TUNA：[https://pypi.tuna.tsinghua.edu.cn/simple](https://pypi.tuna.tsinghua.edu.cn/simple)</div><div class="line"></div><div class="line">######指定单次安装源</div></pre></td></tr></table></figure></p>
<p>pip install &lt;包名&gt; -i <a href="http://pypi.v2ex.com/simple" target="_blank" rel="external">http://pypi.v2ex.com/simple</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">######指定全局安装源</div><div class="line">在unix和macos，配置文件为：$HOME/.pip/pip.conf</div><div class="line">在windows上，配置文件为：%HOME%\pip\pip.ini</div></pre></td></tr></table></figure></p>
<p>[global]<br>timeout = 6000<br>index-url = <a href="http://pypi.douban.com/simple" target="_blank" rel="external">http://pypi.douban.com/simple</a><br>```</p>
<p>######参考资料<br><a href="https://pip.pypa.io/en/latest/" target="_blank" rel="external">pip documentation</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#####列出已安装的包&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;list``` or ```pip freeze```&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>web自动化测试入坑第二天</title>
    <link href="http://yoursite.com/2017/08/31/web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%85%A5%E5%9D%91%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>http://yoursite.com/2017/08/31/web自动化测试入坑第二天/</id>
    <published>2017-08-31T02:41:17.000Z</published>
    <updated>2017-08-31T02:49:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>看完上一篇文章，传送门—&gt;<a href="http://www.jianshu.com/p/1c57ba4b8740。我想大家都应该对自动化测试有个基本了解了，接下来写个自动测试登录吧~~" target="_blank" rel="external">http://www.jianshu.com/p/1c57ba4b8740。我想大家都应该对自动化测试有个基本了解了，接下来写个自动测试登录吧~~</a><br>在写登录之前，我们先来了解一下一个登录流程是什么样的。这里简单的画了一下流程图<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/2026783-136a3522717ac2b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录流程.png" title="">
                </div>
                <div class="image-caption">登录流程.png</div>
            </figure><br>了解完整个流程之后，我们先不忙于去怎么用代码实现，因为在实现自动登录的时候我们会遇到一个问题，就是验证码这块应该怎么去解决。</p>
<p>#####如何解决在登录时验证码的问题<br>1.绕过验证码进行登录，跟后端商量测试的时候把验证码验证关闭就好了😂，这是最简单的方法也是比较好用的方法了~<br>2.识别验证码。这里我用的pytesseract做的验证码识别，具体看下面代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">from selenium import webdriver</div><div class="line">import os,time,sys</div><div class="line">from PIL import Image</div><div class="line">from pytesseract import *</div><div class="line"></div><div class="line">driver = webdriver.Chrome()</div><div class="line"></div><div class="line">def getAuthCode(ulr):</div><div class="line">    driver.get(ulr);</div><div class="line">    time.sleep(0.5);</div><div class="line">    driver.save_screenshot(&quot;captcha.jpg&quot;)  # 截屏，并保存图片</div><div class="line">    cleanImage(&quot;captcha.jpg&quot;)</div><div class="line">    im = Image.open(&apos;captcha1.jpg&apos;)</div><div class="line">    code = pytesseract.image_to_string(im)</div><div class="line">    if len(code) == 4:</div><div class="line">        return code</div><div class="line">    else:</div><div class="line">        return False</div><div class="line"></div><div class="line">def cleanImage(imagePath):</div><div class="line">    image = Image.open(imagePath); #打开图片</div><div class="line">    print image.format, image.size, image.mode</div><div class="line">    box = (1000, 665, 1100, 695) #谷歌浏览器解析自带黑色背景,裁剪出验证码</div><div class="line">    region = image.crop(box)</div><div class="line">    region.convert(&apos;RGB&apos;).save(&apos;/Users/mac/Desktop/captcha1.jpg&apos;)</div></pre></td></tr></table></figure></p>
<p>这里的思路是先找到验证码的地址，然后截图保存图片，再打开图片进行裁剪，再利用pytesseract进行识别。</p>
<p>######这种方式基本上能识别简单的验证码，稍微复杂点的就不行了，而且正确率不是特别高，由于时间问题，我这里并没有针对图片识别进行更多的投入，只是花了点时间在Google跟Baidu上搜了下资料，然后跟朋友探讨了下，pytesseract已经过时了，如果真的想做图片识别的话，可以研究下CNN，利用卷积神经网络搞的，等有时间的时候我会去研究下，研究完后会专门写一篇关于图像识别的文章，这里就不多提了。(有兴趣的朋友可以一起交流~)</p>
<h2 id="所以最终我选的方式是跟后端商量，在测试的时候把验证码关闭了😂。好了，进入今天的正题"><a href="#所以最终我选的方式是跟后端商量，在测试的时候把验证码关闭了😂。好了，进入今天的正题" class="headerlink" title="######所以最终我选的方式是跟后端商量，在测试的时候把验证码关闭了😂。好了，进入今天的正题~"></a>######所以最终我选的方式是跟后端商量，在测试的时候把验证码关闭了😂。好了，进入今天的正题~</h2><p>首先看下我要做测试的登录页：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/2026783-6b76bf2881182d33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录页面.png" title="">
                </div>
                <div class="image-caption">登录页面.png</div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">from selenium import webdriver #导入webdriver</div><div class="line"></div><div class="line">#定义一个全局变量driver</div><div class="line">driver = webdriver.Chrome();  </div><div class="line">#定义一个全局登录页url</div><div class="line">loginPage = &quot;http://xxxxxx/Login.aspx&quot;</div><div class="line">#定义一个登录方法并传入描述，账户，密码</div><div class="line">def testLogin(des, userName,password,):</div><div class="line">    print des,&apos;用户名:&apos;,userName,&apos;密码:&apos;,password;</div><div class="line">    driver.get(loginPage) #开启浏览器并跳转到Url</div><div class="line">    driver.find_element_by_id(&quot;username&quot;).clear() #在输入用户名之前清空下文本框里的内容</div><div class="line">    driver.find_element_by_id(&quot;username&quot;).send_keys(userName) #填充用户名文本框文本</div><div class="line">    driver.find_element_by_id(&quot;pwd&quot;).clear()</div><div class="line">    driver.find_element_by_id(&quot;pwd&quot;).send_keys(password) </div><div class="line">    driver.find_element_by_id(&quot;loginbtn&quot;).click()   #点击登录按钮</div><div class="line">    #这里如果不加try except的话，正常登录会crash，因为正常登录是不弹窗的，只有在登录失败的时候，才会弹窗提示。</div><div class="line">    try:</div><div class="line">       if driver.switch_to_alert():#拦截弹窗</div><div class="line">                driver.switch_to_alert().accept();   #关闭弹窗并确认</div><div class="line">        	    driver.find_element_by_id(&quot;username&quot;).clear()  #清空用户名</div><div class="line">       	        driver.find_element_by_id(&quot;pwd&quot;).clear()  #清空密码</div><div class="line">        	    print driver.switch_to_alert().text  #打印弹窗内容</div><div class="line">      except Exception,e:</div><div class="line">                 print e</div><div class="line"></div><div class="line">if __name__ ==&apos;__main__&apos;:</div><div class="line">    testLogin(&apos;测试未输入用户名&apos;, &apos;&apos;, &apos;&apos;)</div><div class="line">    testLogin(&apos;测试未输入密码&apos;, &apos;qd_test_001&apos;, &apos;&apos;)</div><div class="line">    testLogin(&apos;测试帐户不存在&apos;, &apos;21121&apos;, &apos;xxxxxxx&apos;)</div><div class="line">    testLogin(&apos;测试成功登录&apos;, &apos;sa&apos;, &apos;123456&apos;)</div><div class="line"></div><div class="line">-------------------------------打印结果------------------------</div><div class="line">测试未输入用户名 用户名:  密码: </div><div class="line">测试未输入密码 用户名: qd_test_001 密码: </div><div class="line">测试帐户不存在 用户名: 21121 密码: xxxxxxx</div><div class="line">测试成功登录 用户名: sa 密码: 123456</div></pre></td></tr></table></figure></p>
<p>######这样就完成了所有登录的自动化测试了,自从有了自动化测试再也不用做一些枯燥乏味的事情了，而且测试时间比以前大大提升了很多!下一篇讲下如何加入测试用例并生成报告。欢迎广大的python爱好者一起交流~ 新手上路第二天，请多多指教😁😁😁。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看完上一篇文章，传送门—&amp;gt;&lt;a href=&quot;http://www.jianshu.com/p/1c57ba4b8740。我想大家都应该对自动化测试有个基本了解了，接下来写个自动测试登录吧~~&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http:/
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>web自动化测试入坑第一天</title>
    <link href="http://yoursite.com/2017/08/30/web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%85%A5%E5%9D%91%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>http://yoursite.com/2017/08/30/web自动化测试入坑第一天/</id>
    <published>2017-08-30T09:23:39.000Z</published>
    <updated>2017-08-30T09:27:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>#####1.为什么要做自动化测试？</p>
<p>软件测试是保障和提高软件质量的重要手段。软件开发者和使用者必须对软件进行充分的测试，以确保其正常工作。在典型的软件开发项目中，软件测试工作量往往占开发总工作量的40%以上。因此提高软件测试过程的效率至关重要。<br>为了提高测试效率，越来越多的测试工作引入了自动化测试的思想和方法。实践证明，软件自动化测试技术提高了软件测试的速度和效率，节省了软件测试成本，缩短了产品发布周期。同时，自动化测试技术也完成了许多手工测试无法实现的工作。所以采用自动化测试方法和相应的测试框架成为了软件开发组织测试工作的重要支撑手段。</p>
<p>#####2.什么项目适合做自动化测试？<br>首先考考虑产品是否适合做自动化测试。这方法比较普遍的共识是从三个方面进行权衡。</p>
<ol>
<li>软件需求变动不频繁<br>测试脚本的稳定性决定了自动化测试的维护成本。如果软件需求变动过于频繁，测试人员需要根据变动的需求来更新测试用例以及相关的测试脚本，而脚本的维护本身就是一个代码开发的过程，需要修改、调试，必要的时候还要修改自动化测试的框架，如果所花费的成本不低于利用其节省的测试成本，那么自动化测试便是失败的。项目中的某些模块相对稳定，而某些模块需求变动性很大。我们便可对相对稳定的模块进行自动化测试，而变动较大的仍是用手工测试。</li>
<li>项目周期较长<br>由于自动化测试需求的确定、自动化测试框架的设计、测试脚本的编写与调试均需要相当长的时间来完成。这样的过程本身就是一个测试软件的开发过程，需要较长的时间来完成。如果项目的周期比较短，没有足够的时间去支持这样一个过程，那么自动化测试便成为笑谈</li>
<li>自动化测试脚本可重复使用<br>自动化测试脚本的重复使用要从三个方面来考量，一方面所测试的项目之间是否很大的差异性(如C/S系统和B/S系统的差异);所选择的测试工具是否适应这种差异；最后，测试人员是否有能力开发出适应这种差异的自动化测试框架。<br>#####好了废话不多说，让我们开始动手吧~~<br>######环境搭建<br>系统环境：macOS Sierra 10.12.5<br>语言：python2.7(可使用Java)<br>使用的框架：selenium2.0<br>#####如何使用selenium进行自动化测试<br>1.首先要熟悉selenium API ，API就是selenium 所定义一方法，用于定位，操作页面上的各种元素，这里就不详说了。selenium API文档地址传送门—&gt;<a href="http://selenium-python-zh.readthedocs.io/en/latest/waits.html" target="_blank" rel="external">http://selenium-python-zh.readthedocs.io/en/latest/waits.html</a><br>2.使用Xpath定位传送门 –&gt;<a href="http://www.runoob.com/xpath/xpath-syntax.html" target="_blank" rel="external">http://www.runoob.com/xpath/xpath-syntax.html</a><br>######学习完以上，你可以游刃有余的模拟手工测试来操作页面上的各种元素了。接着你需要做的就是把这些“用例”组织起来，统一来跑就行了。<br>######Example for BaiduSearch:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">from selenium import webdriver</div><div class="line"></div><div class="line">#定义一个全局变量driver</div><div class="line">driver = webdriver.Chrome(); #这里我使用的谷歌浏览器。支持IE，Safari，Firefox</div><div class="line">driver.get(&apos;https://www.baidu.com/&apos;) #开启浏览器并跳转到Url</div><div class="line">driver.find_element_by_id(&quot;kw&quot;).clear() #在输入之前清空下文本框里的内容</div><div class="line">driver.find_element_by_id(&quot;kw&quot;).send_keys(&apos;selenium&apos;) #填充文本框文本</div><div class="line">driver.find_element_by_id(&quot;submit&quot;).click()   #点击搜索按钮</div></pre></td></tr></table></figure>
</li>
</ol>
<p>这就完成了一个简单的自动化百度搜索了😂，下一篇会介绍如何做一个自动化测试登录。太久没用Markdown了，请无视排版。。。新人第一次写技术文章，请多多指教😄，欢迎大神们一起探讨~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#####1.为什么要做自动化测试？&lt;/p&gt;
&lt;p&gt;软件测试是保障和提高软件质量的重要手段。软件开发者和使用者必须对软件进行充分的测试，以确保其正常工作。在典型的软件开发项目中，软件测试工作量往往占开发总工作量的40%以上。因此提高软件测试过程的效率至关重要。&lt;br&gt;为了提
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>iOS-Skill</title>
    <link href="http://yoursite.com/2017/08/30/iOS-Skill/"/>
    <id>http://yoursite.com/2017/08/30/iOS-Skill/</id>
    <published>2017-08-30T01:52:58.000Z</published>
    <updated>2017-08-30T02:20:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>#####iOS开发过程中一些小问题小技巧，代码片段。</p>
<blockquote>
<p>利用Safari打开一个链接</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://baidu.com"</span>];</div><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:url];</div></pre></td></tr></table></figure>
</blockquote>
<a id="more"></a>
<blockquote>
<p>汉字转码</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSString</span> *oriString = <span class="string">@"\u67aa\u738b"</span>;</div><div class="line"><span class="built_in">NSString</span> *escapedString = [oriString stringByReplacingPercentEscapesUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</div></pre></td></tr></table></figure>
<p>调用电话，短信，邮件</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"mailto:apple@mac.com?Subject=hello"</span>]];</div><div class="line">sms:<span class="comment">//调用短信</span></div><div class="line">tel:<span class="comment">//调用电话</span></div><div class="line">itms:<span class="comment">//打开MobileStore.app</span></div></pre></td></tr></table></figure>
<p>获取版本信息</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UIDevice</span> *myDevice = [<span class="built_in">UIDevice</span> currentDevice];</div><div class="line"><span class="built_in">NSString</span> *systemVersion = myDevice.systemVersion;</div></pre></td></tr></table></figure>
</blockquote>
<p>&gt;</p>
<blockquote>
<p>iPhone 更改键盘右下角按键的 type</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">SearchBar *mySearchBar = [[<span class="built_in">UISearchBar</span> alloc]init];</div><div class="line">mySearchBar.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">self</span>.view.bounds.size.width, <span class="number">44</span>);</div><div class="line">mySearchBar.placeholder = <span class="string">@"placeholderString"</span>;</div><div class="line">mySearchBar.delegate = <span class="keyword">self</span>;</div><div class="line">[<span class="keyword">self</span>.view addSubview:mySearchBar];</div><div class="line"><span class="built_in">UITextField</span> *searchField = [[mySearchBar subviews] lastObject];</div><div class="line">searchField.returnKeyType = <span class="built_in">UIReturnKeyDone</span>;</div></pre></td></tr></table></figure>
<p>给图片增加模糊效果</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//加模糊效果，image是图片，blur是模糊度</span></div><div class="line">+ (<span class="built_in">UIImage</span> *)blurryImage:(<span class="built_in">UIImage</span> *)image withBlurLevel:(<span class="built_in">CGFloat</span>)blur &#123;</div><div class="line">    <span class="comment">//模糊度,</span></div><div class="line">    <span class="keyword">if</span> ((blur &lt; <span class="number">0.1</span>f) || (blur &gt; <span class="number">2.0</span>f)) &#123;</div><div class="line">        blur = <span class="number">0.1</span>f;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//boxSize必须大于0</span></div><div class="line">    <span class="keyword">int</span> boxSize = (<span class="keyword">int</span>)(blur * <span class="number">100</span>);</div><div class="line">    boxSize -= (boxSize % <span class="number">2</span>) + <span class="number">1</span>;</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"boxSize:%i"</span>,boxSize);</div><div class="line">    <span class="comment">//图像处理</span></div><div class="line">    <span class="built_in">CGImageRef</span> img = image.CGImage;</div><div class="line">&gt;</div><div class="line">    <span class="comment">//图像缓存,输入缓存，输出缓存</span></div><div class="line">    vImage_Buffer inBuffer, outBuffer;</div><div class="line">    vImage_Error error;</div><div class="line">    <span class="comment">//像素缓存</span></div><div class="line">    <span class="keyword">void</span> *pixelBuffer;</div><div class="line">&gt;</div><div class="line">	<span class="comment">//数据源提供者，Defines an opaque type that supplies 	Quartz with data.</span></div><div class="line">   <span class="built_in">CGDataProviderRef</span> inProvider = <span class="built_in">CGImageGetDataProvider</span>(img);</div><div class="line">    <span class="comment">// provider’s data.</span></div><div class="line">    <span class="built_in">CFDataRef</span> inBitmapData = <span class="built_in">CGDataProviderCopyData</span>(inProvider);</div><div class="line">&gt;</div><div class="line">	 <span class="comment">//宽，高，字节/行，data</span></div><div class="line">    inBuffer.width = <span class="built_in">CGImageGetWidth</span>(img);</div><div class="line">    inBuffer.height = <span class="built_in">CGImageGetHeight</span>(img);</div><div class="line">    inBuffer.rowBytes = <span class="built_in">CGImageGetBytesPerRow</span>(img);</div><div class="line">    inBuffer.data = (<span class="keyword">void</span>*)<span class="built_in">CFDataGetBytePtr</span>(inBitmapData);</div><div class="line">&gt;</div><div class="line">	 <span class="comment">//像数缓存，字节行*图片高</span></div><div class="line">    pixelBuffer = malloc(<span class="built_in">CGImageGetBytesPerRow</span>(img) * <span class="built_in">CGImageGetHeight</span>(img));</div><div class="line">&gt;</div><div class="line">    outBuffer.data = pixelBuffer;</div><div class="line">    outBuffer.width = <span class="built_in">CGImageGetWidth</span>(img);</div><div class="line">    outBuffer.height = <span class="built_in">CGImageGetHeight</span>(img);</div><div class="line">    outBuffer.rowBytes = <span class="built_in">CGImageGetBytesPerRow</span>(img);</div><div class="line">&gt;</div><div class="line">    <span class="comment">// 第三个中间的缓存区,抗锯齿的效果</span></div><div class="line">    <span class="keyword">void</span> *pixelBuffer2 = malloc(<span class="built_in">CGImageGetBytesPerRow</span>(img) * <span class="built_in">CGImageGetHeight</span>(img));</div><div class="line">    vImage_Buffer outBuffer2;</div><div class="line">    outBuffer2.data = pixelBuffer2;</div><div class="line">    outBuffer2.width = <span class="built_in">CGImageGetWidth</span>(img);</div><div class="line">    outBuffer2.height = <span class="built_in">CGImageGetHeight</span>(img);</div><div class="line">    outBuffer2.rowBytes = <span class="built_in">CGImageGetBytesPerRow</span>(img);</div><div class="line">&gt;</div><div class="line">    <span class="comment">//Convolves a region of interest within an ARGB8888 source image by an implicit M x N kernel that has the effect of a box filter.</span></div><div class="line">    error = vImageBoxConvolve_ARGB8888(&amp;inBuffer;, &amp;outBuffer2;, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, boxSize, boxSize, <span class="literal">NULL</span>, kvImageEdgeExtend);</div><div class="line">    error = vImageBoxConvolve_ARGB8888(&amp;outBuffer2;, &amp;inBuffer;, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, boxSize, boxSize, <span class="literal">NULL</span>, kvImageEdgeExtend);</div><div class="line">    error = vImageBoxConvolve_ARGB8888(&amp;inBuffer;, &amp;outBuffer;, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, boxSize, boxSize, <span class="literal">NULL</span>, kvImageEdgeExtend);</div><div class="line">&gt;</div><div class="line">    <span class="keyword">if</span> (error) &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"error from convolution %ld"</span>, error);</div><div class="line">    &#125;</div><div class="line">&gt;</div><div class="line">    <span class="comment">//    NSLog(@"字节组成部分：%zu",CGImageGetBitsPerComponent(img));</span></div><div class="line">    <span class="comment">//颜色空间DeviceRGB</span></div><div class="line">    <span class="built_in">CGColorSpaceRef</span> colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</div><div class="line">&gt;</div><div class="line">    <span class="comment">//用图片创建上下文,CGImageGetBitsPerComponent(img),7,8</span></div><div class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">CGBitmapContextCreate</span>(</div><div class="line">                                             outBuffer.data,</div><div class="line">                                             outBuffer.width,</div><div class="line">                                             outBuffer.height,</div><div class="line">                                             <span class="number">8</span>,</div><div class="line">                                             outBuffer.rowBytes,</div><div class="line">                                             colorSpace,</div><div class="line">                                             <span class="built_in">CGImageGetBitmapInfo</span>(image.CGImage));</div><div class="line">&gt;</div><div class="line">    <span class="comment">//根据上下文，处理过的图片，重新组件</span></div><div class="line">    <span class="built_in">CGImageRef</span> imageRef = <span class="built_in">CGBitmapContextCreateImage</span> (ctx);</div><div class="line">    <span class="built_in">UIImage</span> *returnImage = [<span class="built_in">UIImage</span> imageWithCGImage:imageRef];</div><div class="line">&gt;</div><div class="line">    <span class="comment">//clean up</span></div><div class="line">    <span class="built_in">CGContextRelease</span>(ctx);</div><div class="line">    <span class="built_in">CGColorSpaceRelease</span>(colorSpace);</div><div class="line">    free(pixelBuffer);</div><div class="line">    free(pixelBuffer2);</div><div class="line">    <span class="built_in">CFRelease</span>(inBitmapData);</div><div class="line">    <span class="built_in">CGImageRelease</span>(imageRef);</div><div class="line">&gt;</div><div class="line">    <span class="keyword">return</span> returnImage;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>图片压缩</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">用法：<span class="built_in">UIImage</span> *yourImage= [<span class="keyword">self</span> imageWithImageSimple:image scaledToSize:<span class="built_in">CGSizeMake</span>(<span class="number">210.0</span>, <span class="number">210.0</span>)];</div><div class="line"><span class="comment">//压缩图片</span></div><div class="line">- (<span class="built_in">UIImage</span>*)imageWithImageSimple:(<span class="built_in">UIImage</span>*)image scaledToSize:(<span class="built_in">CGSize</span>)newSize</div><div class="line">&#123;</div><div class="line"><span class="comment">// Create a graphics image context</span></div><div class="line"><span class="built_in">UIGraphicsBeginImageContext</span>(newSize);</div><div class="line"><span class="comment">// Tell the old image to draw in this newcontext, with the desired</span></div><div class="line"><span class="comment">// new size</span></div><div class="line">[image drawInRect:<span class="built_in">CGRectMake</span>(<span class="number">0</span>,<span class="number">0</span>,newSize.width,newSize.height)];</div><div class="line"><span class="comment">// Get the new image from the context</span></div><div class="line"><span class="built_in">UIImage</span>* newImage = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class="line"><span class="comment">// End the context</span></div><div class="line"><span class="built_in">UIGraphicsEndImageContext</span>();</div><div class="line"><span class="comment">// Return the new image.</span></div><div class="line"><span class="keyword">return</span> newImage;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>把时间戳转换为时间</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">+ (<span class="built_in">NSDate</span> *)dateWithTimeIntervalInMilliSecondSince1970:(<span class="keyword">double</span>)timeIntervalInMilliSecond &#123;</div><div class="line">	<span class="built_in">NSDate</span> *ret = <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">double</span> timeInterval = timeIntervalInMilliSecond;</div><div class="line">    <span class="keyword">if</span>(timeIntervalInMilliSecond &gt; <span class="number">140000000000</span>) &#123;</div><div class="line">        timeInterval = timeIntervalInMilliSecond / <span class="number">1000</span>;</div><div class="line">    &#125;</div><div class="line">     ret = [<span class="built_in">NSDate</span> dateWithTimeIntervalSince1970:timeInterval];</div><div class="line">&gt;</div><div class="line">     <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>自定义cell中获取不到cell实际大小的办法</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;-(<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect &#123;</div><div class="line">    <span class="comment">// 重写此方法，并在此方法中获取</span></div><div class="line">    <span class="built_in">CGFloat</span> width = <span class="keyword">self</span>.frame.size.width;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>长按图标抖动</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&gt;-(<span class="keyword">void</span>)longPress:(<span class="built_in">UILongPressGestureRecognizer</span>*)longPress</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (longPress.state==<span class="built_in">UIGestureRecognizerStateBegan</span>) &#123;</div><div class="line">        <span class="built_in">CAKeyframeAnimation</span>* anim=[<span class="built_in">CAKeyframeAnimation</span> animation];</div><div class="line">        anim.keyPath=<span class="string">@"transform.rotation"</span>;</div><div class="line">        anim.values=@[@(angelToRandian(<span class="number">-7</span>)),@(angelToRandian(<span class="number">7</span>)),@(angelToRandian(<span class="number">-7</span>))];</div><div class="line">        anim.repeatCount=MAXFLOAT;</div><div class="line">        anim.duration=<span class="number">0.2</span>;</div><div class="line">        [<span class="keyword">self</span>.imageView.layer addAnimation:anim forKey:<span class="literal">nil</span>];</div><div class="line">        <span class="keyword">self</span>.btn.hidden=<span class="literal">NO</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>两种方法删除NSUserDefaults所有记录</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt;<span class="comment">//方法一</span></div><div class="line"><span class="built_in">NSString</span> *appDomain = [[<span class="built_in">NSBundle</span> mainBundle] bundleIdentifier];</div><div class="line">[[<span class="built_in">NSUserDefaults</span> standardUserDefaults] removePersistentDomainForName:appDomain];</div><div class="line">&gt;</div><div class="line"><span class="comment">//方法二</span></div><div class="line">- (<span class="keyword">void</span>)resetDefaults &#123;</div><div class="line">    <span class="built_in">NSUserDefaults</span> * defs = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</div><div class="line">    <span class="built_in">NSDictionary</span> * dict = [defs dictionaryRepresentation];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">id</span> key <span class="keyword">in</span> dict) &#123;</div><div class="line">        [defs removeObjectForKey:key];</div><div class="line">    &#125;</div><div class="line">    [defs synchronize];</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>截屏全图</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="built_in">UIImage</span> *)imageFromView: (<span class="built_in">UIView</span> *) theView&#123;</div><div class="line">  	<span class="built_in">UIGraphicsBeginImageContext</span>(theView.frame.size);</div><div class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line">    [theView.layer renderInContext:context];</div><div class="line">    <span class="built_in">UIImage</span> *theImage = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</div><div class="line">&gt;</div><div class="line">    <span class="keyword">return</span> theImage;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>去除UIImageView锯齿</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;imageView.layer.shouldRasterize = <span class="literal">YES</span>;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>由身份证号码返回性别</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&gt;-(<span class="built_in">NSString</span> *)sexStrFromIdentityCard:(<span class="built_in">NSString</span> *)numberStr&#123;</div><div class="line">    <span class="built_in">NSString</span> *result = <span class="literal">nil</span>;</div><div class="line">    <span class="built_in">BOOL</span> isAllNumber = <span class="literal">YES</span>;</div><div class="line">&gt;</div><div class="line">    <span class="keyword">if</span>([numberStr length]&lt;<span class="number">17</span>)</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">&gt;    </div><div class="line">    <span class="comment">//**截取第17为性别识别符</span></div><div class="line">    <span class="built_in">NSString</span> *fontNumer = [numberStr substringWithRange:<span class="built_in">NSMakeRange</span>(<span class="number">16</span>, <span class="number">1</span>)];</div><div class="line">&gt;    </div><div class="line">    <span class="comment">//**检测是否是数字;</span></div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *str = [fontNumer UTF8String];</div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *p = str;</div><div class="line">    <span class="keyword">while</span> (*p!=<span class="string">'\0'</span>) &#123;</div><div class="line">        <span class="keyword">if</span>(!(*p&gt;=<span class="string">'0'</span>&amp;&amp;*p&lt;=<span class="string">'9'</span>))</div><div class="line">            isAllNumber = <span class="literal">NO</span>;</div><div class="line">        p++;</div><div class="line">    &#125;</div><div class="line">&gt;</div><div class="line">    <span class="keyword">if</span>(!isAllNumber)</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">&gt;</div><div class="line">    <span class="keyword">int</span> sexNumber = [fontNumer integerValue];</div><div class="line">    <span class="keyword">if</span>(sexNumber%<span class="number">2</span>==<span class="number">1</span>)</div><div class="line">        result = <span class="string">@"男"</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sexNumber%<span class="number">2</span>==<span class="number">0</span>)</div><div class="line">        result = <span class="string">@"女"</span>;</div><div class="line">&gt;</div><div class="line">    <span class="keyword">return</span> result;  </div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>数组随机重新排列</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&gt;+ (<span class="built_in">NSArray</span> *)getRandomWithPosition:(<span class="built_in">NSInteger</span>)position positionContent:(<span class="keyword">id</span>)positionContent array:(<span class="built_in">NSArray</span> *)baseArray &#123;</div><div class="line">    <span class="built_in">NSMutableArray</span> *resultArray = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:baseArray.count];</div><div class="line">    <span class="built_in">NSMutableArray</span> *tempBaseArray = [<span class="built_in">NSMutableArray</span> arrayWithArray:baseArray];</div><div class="line">&gt;</div><div class="line">    <span class="keyword">while</span> ([tempBaseArray count]) &#123;</div><div class="line">        <span class="built_in">NSInteger</span> range = [tempBaseArray count];</div><div class="line">        <span class="keyword">id</span> string = [tempBaseArray objectAtIndex:arc4random()%range];</div><div class="line">        [resultArray addObject:string];</div><div class="line">        [tempBaseArray removeObject:string];</div><div class="line">    &#125;</div><div class="line">&gt; </div><div class="line">    <span class="built_in">NSUInteger</span> index = [resultArray indexOfObject:positionContent];</div><div class="line">    [resultArray exchangeObjectAtIndex:index withObjectAtIndex:position - <span class="number">1</span>];</div><div class="line">&gt; </div><div class="line">    <span class="keyword">return</span> resultArray;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>利用陀螺仪实现更真实的微信摇一摇动画</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</div><div class="line">&#123;    </div><div class="line">    application.applicationSupportsShakeToEdit=<span class="literal">YES</span>;</div><div class="line">&#125;</div><div class="line">&gt;</div><div class="line">-(<span class="keyword">void</span>)motionEnded:(<span class="built_in">UIEventSubtype</span>)motion withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</div><div class="line">    <span class="keyword">if</span>(motion==<span class="built_in">UIEventSubtypeMotionShake</span>) &#123;</div><div class="line">         <span class="comment">// 真实一点的摇动动画</span></div><div class="line">        [<span class="keyword">self</span> addAnimations];</div><div class="line">         <span class="comment">// 播放声音</span></div><div class="line">        AudioServicesPlaySystemSound (soundID); </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&gt;</div><div class="line">- (<span class="keyword">void</span>)addAnimations &#123;</div><div class="line">    <span class="built_in">CABasicAnimation</span> *translation = [<span class="built_in">CABasicAnimation</span> animationWithKeyPath:<span class="string">@"transform"</span>];</div><div class="line">    translation.timingFunction = [<span class="built_in">CAMediaTimingFunction</span> functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</div><div class="line">    translation.toValue=[<span class="built_in">NSValue</span> valueWithCATransform3D:<span class="built_in">CATransform3DMakeRotation</span>(-M_PI_4, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>)];</div><div class="line">    translation.duration = <span class="number">0.2</span>;</div><div class="line">    translation.repeatCount = <span class="number">2</span>;</div><div class="line">    translation.autoreverses = <span class="literal">YES</span>;</div><div class="line">&gt;</div><div class="line">    [shake.layer addAnimation:translation forKey:<span class="string">@"translation"</span>];</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>在后台播放音乐</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&gt;<span class="comment">//1. 在Info.plist中，添加"Required background modes"键，其值设置是“App plays audio" </span></div><div class="line"><span class="comment">//2. 在播放器播放音乐的代码所在处，添加如下两段代码（当然，前提是已经添加了AVFoundation框架）</span></div><div class="line">&gt;</div><div class="line"><span class="comment">//添加后台播放代码：</span></div><div class="line"><span class="built_in">AVAudioSession</span> *session = [<span class="built_in">AVAudioSession</span> sharedInstance];    </div><div class="line">[session setActive:<span class="literal">YES</span> error:<span class="literal">nil</span>];    </div><div class="line">[session setCategory:<span class="built_in">AVAudioSessionCategoryPlayback</span> error:<span class="literal">nil</span>];   </div><div class="line">&gt; </div><div class="line"><span class="comment">//以及设置app支持接受远程控制事件代码。设置app支持接受远程控制事件，</span></div><div class="line"><span class="comment">//其实就是在dock中可以显示应用程序图标，同时点击该图片时，打开app。</span></div><div class="line"><span class="comment">//或者锁屏时，双击home键，屏幕上方出现应用程序播放控制按钮。</span></div><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] beginReceivingRemoteControlEvents]; </div><div class="line">&gt;</div><div class="line"><span class="comment">//用下列代码播放音乐，测试后台播放</span></div><div class="line"><span class="comment">// 创建播放器  </span></div><div class="line"><span class="built_in">AVAudioPlayer</span> *player = [[<span class="built_in">AVAudioPlayer</span> alloc] initWithContentsOfURL:url error:<span class="literal">nil</span>];    </div><div class="line">[player prepareToPlay];  </div><div class="line">[player setVolume:<span class="number">1</span>];  </div><div class="line">player.numberOfLoops = <span class="number">-1</span>; <span class="comment">//设置音乐播放次数  -1为一直循环  </span></div><div class="line">[player play]; <span class="comment">//播放</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>利用富文本改变字体颜色</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="built_in">NSMutableAttributedString</span> *)changeTextColor:(<span class="built_in">NSString</span> *)text needChange:(<span class="built_in">NSString</span> *)value <span class="built_in">UIColor</span>:(<span class="built_in">UIColor</span> *)color&#123;</div><div class="line">&gt;</div><div class="line">    <span class="built_in">NSMutableAttributedString</span> *attrstring = [[<span class="built_in">NSMutableAttributedString</span> alloc] initWithString:text];</div><div class="line">&gt;</div><div class="line">    <span class="comment">//1.设置字体颜色</span></div><div class="line">    [attrstring addAttribute:<span class="built_in">NSForegroundColorAttributeName</span></div><div class="line">                       value:color</div><div class="line">                       range:[text rangeOfString:value]];</div><div class="line">&gt;</div><div class="line">    <span class="keyword">return</span> attrstring;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>计算两个日期之间的天数</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="built_in">NSInteger</span>)calcDaysFromBegin:(<span class="built_in">NSDate</span> *)beginDate end:(<span class="built_in">NSDate</span> *)endDate&#123;</div><div class="line">    <span class="comment">//创建日期格式化对象</span></div><div class="line">    <span class="built_in">NSDateFormatter</span> *dateFormatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</div><div class="line">    [dateFormatter setDateFormat:<span class="string">@"yyyy-MM-dd HH:mm"</span>];</div><div class="line">&gt;</div><div class="line">    <span class="comment">//取两个日期对象的时间间隔：</span></div><div class="line">    <span class="comment">//这里的NSTimeInterval 并不是对象，是基本型，其实是double类型，是由c定义的:typedef double NSTimeInterval;</span></div><div class="line">    <span class="built_in">NSTimeInterval</span> time = [endDate timeIntervalSinceDate:beginDate];</div><div class="line">&gt;</div><div class="line">    <span class="keyword">int</span> days = ((<span class="keyword">int</span>)time) / (<span class="number">3600</span>*<span class="number">24</span>);</div><div class="line">    <span class="comment">//int hours=((int)time)%(3600*24)/3600;</span></div><div class="line">    <span class="comment">//NSString *dateContent=[[NSString alloc] initWithFormat:@"%i天%i小时",days,hours];</span></div><div class="line">    <span class="keyword">return</span> days;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>获取上个月或者下个月 +1是下个月 -1是上个月</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="built_in">NSDate</span> *)getPriousorLaterDateFromDate:(<span class="built_in">NSDate</span> *)date withMonth:(<span class="keyword">int</span>)month&#123;</div><div class="line">&gt;    </div><div class="line">    <span class="built_in">NSDateComponents</span> *comps = [[<span class="built_in">NSDateComponents</span> alloc] init];</div><div class="line">&gt;    </div><div class="line">    [comps setMonth:month];</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">NSCalendar</span> *calender = [[<span class="built_in">NSCalendar</span> alloc] initWithCalendarIdentifier:<span class="built_in">NSGregorianCalendar</span>];</div><div class="line">&gt;  </div><div class="line">    <span class="built_in">NSDate</span> *mDate = [calender dateByAddingComponents:comps toDate:date options:<span class="number">0</span>];</div><div class="line">&gt;   </div><div class="line">    <span class="keyword">return</span> mDate;</div><div class="line">&gt;  </div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>两个时间比较</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="keyword">int</span>)compareOneDay:(<span class="built_in">NSDate</span> *)oneDay withAnotherDay:(<span class="built_in">NSDate</span> *)anotherDay&#123;</div><div class="line">&gt;</div><div class="line">    <span class="built_in">NSDateFormatter</span> *dateFormatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</div><div class="line">    [dateFormatter setDateFormat:<span class="string">@"yyyy/MM/dd"</span>];</div><div class="line">    <span class="built_in">NSString</span> *oneDayStr = [dateFormatter stringFromDate:oneDay];</div><div class="line">    <span class="built_in">NSString</span> *anotherDayStr = [dateFormatter stringFromDate:anotherDay];</div><div class="line">    <span class="built_in">NSDate</span> *dateA = [dateFormatter dateFromString:oneDayStr];</div><div class="line">    <span class="built_in">NSDate</span> *dateB = [dateFormatter dateFromString:anotherDayStr];</div><div class="line">    <span class="built_in">NSComparisonResult</span> result = [dateA compare:dateB];</div><div class="line">    <span class="comment">//    NSLog(@"date1 : %@, date2 : %@", oneDay, anotherDay);</span></div><div class="line">    <span class="keyword">if</span> (result == <span class="built_in">NSOrderedDescending</span>) &#123;</div><div class="line">        <span class="comment">//NSLog(@"Date1  is in the future");</span></div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (result == <span class="built_in">NSOrderedAscending</span>)&#123;</div><div class="line">        <span class="comment">//NSLog(@"Date1 is in the past");</span></div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//NSLog(@"Both dates are the same");</span></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&gt;  </div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>Date 转 String</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)stringFromDate:(<span class="built_in">NSDate</span> *)date&#123;</div><div class="line">&gt;</div><div class="line">    <span class="built_in">NSDateFormatter</span> *dateFormatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</div><div class="line">&gt;   </div><div class="line">    [dateFormatter setDateFormat:<span class="string">@"yyyy/MM/dd"</span>];</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">NSString</span> *destDateString = [dateFormatter stringFromDate:date];</div><div class="line">&gt;   </div><div class="line">    <span class="keyword">return</span> destDateString;</div><div class="line">&gt;   </div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>String 转Date</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&gt;- (<span class="built_in">NSDate</span> *)dateFromString:(<span class="built_in">NSString</span> *)dateString&#123;</div><div class="line">&gt;</div><div class="line">    <span class="built_in">NSDateFormatter</span> *dateFormatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</div><div class="line">&gt;   </div><div class="line">    [dateFormatter setDateFormat: <span class="string">@"yyyy/MM/dd"</span>];</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">NSDate</span> *destDate= [dateFormatter dateFromString:dateString];</div><div class="line">&gt;   </div><div class="line">    <span class="keyword">return</span> destDate;</div><div class="line">&gt;   </div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>浮点转百分比</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)percentage:(<span class="built_in">NSString</span> *)value&#123;</div><div class="line">&gt;</div><div class="line">    <span class="keyword">float</span> _percent = [value floatValue];</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">CFLocaleRef</span> currentLocale = <span class="built_in">CFLocaleCopyCurrent</span>();</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">CFNumberFormatterRef</span> numberFormatter = <span class="built_in">CFNumberFormatterCreate</span>(<span class="literal">NULL</span>, currentLocale, kCFNumberFormatterPercentStyle);</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">CFNumberRef</span> number = <span class="built_in">CFNumberCreate</span>(<span class="literal">NULL</span>, kCFNumberFloatType, &amp;_percent);</div><div class="line">&gt;   </div><div class="line">    <span class="built_in">CFStringRef</span> numberString = <span class="built_in">CFNumberFormatterCreateStringWithNumber</span>(<span class="literal">NULL</span>, numberFormatter, number);</div><div class="line">&gt;   </div><div class="line">    <span class="keyword">return</span> (__bridge <span class="built_in">NSString</span> * _Nullable)(numberString);</div><div class="line">&gt;   </div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>获取当月第一天跟最后一天</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)getMonthBeginAndEndWith:(<span class="built_in">NSString</span> *)dateStr&#123;</div><div class="line">&gt;</div><div class="line">    <span class="built_in">NSDateFormatter</span> *format=[[<span class="built_in">NSDateFormatter</span> alloc] init];</div><div class="line">    [format setDateFormat:<span class="string">@"yyyy/MM/dd"</span>];</div><div class="line">    <span class="built_in">NSDate</span> *newDate=[format dateFromString:dateStr];</div><div class="line">    <span class="keyword">double</span> interval = <span class="number">0</span>;</div><div class="line">    <span class="built_in">NSDate</span> *beginDate = <span class="literal">nil</span>;</div><div class="line">    <span class="built_in">NSDate</span> *endDate = <span class="literal">nil</span>;</div><div class="line">    <span class="built_in">NSCalendar</span> *calendar = [<span class="built_in">NSCalendar</span> currentCalendar];</div><div class="line">&gt;</div><div class="line">    [calendar setFirstWeekday:<span class="number">2</span>];<span class="comment">//设定周一为周首日</span></div><div class="line">    <span class="built_in">BOOL</span> ok = [calendar rangeOfUnit:<span class="built_in">NSMonthCalendarUnit</span> startDate:&amp;beginDate interval:&amp;interval forDate:newDate];</div><div class="line">    <span class="comment">//分别修改为 NSDayCalendarUnit NSWeekCalendarUnit NSYearCalendarUnit</span></div><div class="line">    <span class="keyword">if</span> (ok) &#123;</div><div class="line">        endDate = [beginDate dateByAddingTimeInterval:interval<span class="number">-1</span>];</div><div class="line">    &#125;<span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">@""</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">NSDateFormatter</span> *myDateFormatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</div><div class="line">    [myDateFormatter setDateFormat:<span class="string">@"YYYY/MM/dd"</span>];</div><div class="line">    <span class="comment">//月初</span></div><div class="line">    <span class="built_in">NSString</span> *beginString = [myDateFormatter stringFromDate:beginDate];</div><div class="line">    <span class="comment">//月末</span></div><div class="line">    <span class="built_in">NSString</span> *endString = [myDateFormatter stringFromDate:endDate];</div><div class="line">    <span class="built_in">NSString</span> *s = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@-%@"</span>,beginString,endString];</div><div class="line">    <span class="keyword">return</span> s;</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>UIColor HEX</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&gt;+ (<span class="built_in">UIColor</span> *)colorWithHexString:(<span class="built_in">NSString</span> *)color alpha:(<span class="built_in">CGFloat</span>)alpha&#123;</div><div class="line">    <span class="comment">//删除字符串中的空格</span></div><div class="line">    <span class="built_in">NSString</span> *cString = [[color stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet]] uppercaseString];</div><div class="line">    <span class="comment">// String should be 6 or 8 characters</span></div><div class="line">    <span class="keyword">if</span> ([cString length] &lt; <span class="number">6</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> [<span class="built_in">UIColor</span> clearColor];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// strip 0X if it appears</span></div><div class="line">    <span class="comment">//如果是0x开头的，那么截取字符串，字符串从索引为2的位置开始，一直到末尾</span></div><div class="line">    <span class="keyword">if</span> ([cString hasPrefix:<span class="string">@"0X"</span>])</div><div class="line">    &#123;</div><div class="line">        cString = [cString substringFromIndex:<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//如果是#开头的，那么截取字符串，字符串从索引为1的位置开始，一直到末尾</span></div><div class="line">    <span class="keyword">if</span> ([cString hasPrefix:<span class="string">@"#"</span>])</div><div class="line">    &#123;</div><div class="line">        cString = [cString substringFromIndex:<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ([cString length] != <span class="number">6</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> [<span class="built_in">UIColor</span> clearColor];</div><div class="line">    &#125;</div><div class="line">&gt;</div><div class="line">    <span class="comment">// Separate into r, g, b substrings</span></div><div class="line">    <span class="built_in">NSRange</span> range;</div><div class="line">    range.location = <span class="number">0</span>;</div><div class="line">    range.length = <span class="number">2</span>;</div><div class="line">    <span class="comment">//r</span></div><div class="line">    <span class="built_in">NSString</span> *rString = [cString substringWithRange:range];</div><div class="line">    <span class="comment">//g</span></div><div class="line">    range.location = <span class="number">2</span>;</div><div class="line">    <span class="built_in">NSString</span> *gString = [cString substringWithRange:range];</div><div class="line">    <span class="comment">//b</span></div><div class="line">    range.location = <span class="number">4</span>;</div><div class="line">    <span class="built_in">NSString</span> *bString = [cString substringWithRange:range];</div><div class="line">&gt;</div><div class="line">    <span class="comment">// Scan values</span></div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r, g, b;</div><div class="line">    [[<span class="built_in">NSScanner</span> scannerWithString:rString] scanHexInt:&amp;r];</div><div class="line">    [[<span class="built_in">NSScanner</span> scannerWithString:gString] scanHexInt:&amp;g];</div><div class="line">    [[<span class="built_in">NSScanner</span> scannerWithString:bString] scanHexInt:&amp;b];</div><div class="line">    <span class="keyword">return</span> [<span class="built_in">UIColor</span> colorWithRed:((<span class="keyword">float</span>)r / <span class="number">255.0</span>f) green:((<span class="keyword">float</span>)g / <span class="number">255.0</span>f) blue:((<span class="keyword">float</span>)b / <span class="number">255.0</span>f) alpha:alpha];</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p>###Objective-C 内存管理</p>
<ol>
<li>一个对象可以有一个或多个拥有者</li>
<li>当它一个拥有者都没有的时候，它就会被回收</li>
<li>如果想保留一个对象不被回收，你就必须成为它的拥有者</li>
</ol>
<p>###关键字</p>
<ol>
<li>alloc 为对象分配内存，计数设为1，并返回此对象。</li>
<li>copy 复制一个对象，此对象计数为1，返回此对象。你将成为此克隆对象的拥有者。</li>
<li>retain 对象计数+1，并成为次对象的拥有者。</li>
<li>release 对象计数-1，并丢掉此对象。</li>
<li>autorelease 在未来的</li>
<li>某一个时刻，对象计数-1。并在未来的某个时间放弃此对象。</li>
</ol>
<p>###原则</p>
<ol>
<li>一个代码块内要确保copy，alloc 和 retain 的使用数量与 release 和 autorelease 的数量相等。</li>
<li>在使用以 alloc 或 new 开头或包含 copy 的方法，或 retain 一个对象时，你将会编程它的拥有者。<br>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</li>
<li>实现 dealloc 方法，这是系统当 retain -&gt; 0 的时候，自动调用的。手动调用会引起 retain count 计数错误（多一次的 release）。</li>
</ol>
<p>###tableView性能优化</p>
<p>####cell的循环利用方式1<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *ID = <span class="string">@"cell"</span>;</div><div class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:ID];</div><div class="line">    <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</div><div class="line">        cell = [[<span class="built_in">UITableViewCell</span> alloc] initWithStyle:<span class="built_in">UITableViewCellStyleValue1</span> reuseIdentifier:ID];</div><div class="line">    &#125;</div><div class="line">    cell.textLabel.text = <span class="string">@""</span>;</div><div class="line">    <span class="keyword">return</span> cell;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####cell的循环利用方式2-注册<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *ID = <span class="string">@"cell"</span>;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];</div><div class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">self</span>.tableview.dataSource = <span class="keyword">self</span>;</div><div class="line">    <span class="keyword">self</span>.tableview.delegate = <span class="keyword">self</span>;</div><div class="line">    [<span class="keyword">self</span>.tableview registerClass:[<span class="built_in">UITableViewCell</span> <span class="keyword">class</span>] forCellReuseIdentifier:<span class="string">@"cell"</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:ID];</div><div class="line">    cell.textLabel.text = <span class="string">@""</span>;</div><div class="line">    <span class="keyword">return</span> cell;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>###自定义cell</p>
<p>####等高cell<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-(<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span>)indexPath</div><div class="line">&#123;</div><div class="line">      MuziCell *cell = [MuziCell cellWithTableView:tableView];</div><div class="line">      cell.status = <span class="keyword">self</span>.statues[indexPath.row];    <span class="comment">// 将数据传进cell</span></div><div class="line">      [cell layoutIfNeeded];</div><div class="line">      <span class="keyword">return</span> cell.height;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####非等高cell<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line"></div><div class="line">    MuziCell *cell = [MuziCell cellWithTableView:tableView];</div><div class="line">    cell.status = <span class="keyword">self</span>.statues[indexPath.row];    <span class="comment">// 将数据传进cell</span></div><div class="line">    [cell layoutIfNeeded];</div><div class="line">    <span class="keyword">self</span>.heights[@(indexPath.row)]  = @(cell.height); <span class="comment">// 字典里面是对象</span></div><div class="line">    <span class="keyword">return</span> cell;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 返回估计高度,非常重要，调节cellforRow和heightForRow的调用方法</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView estimatedHeightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span>)indexPath</div><div class="line">&#123;</div><div class="line">      <span class="keyword">return</span> <span class="number">200</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span>)indexPath</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 将上面的高度存起来，拿到这里使用      </span></div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span>.heights[@(indexPath.row)] doubleValue];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>###设置UITableView分割线距左边的间距<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)viewDidLoad&#123;</div><div class="line"></div><div class="line">[<span class="keyword">super</span> viewDidLoad];</div><div class="line"></div><div class="line">[<span class="keyword">self</span>.tableView setSeparatorInset:<span class="built_in">UIEdgeInsetsZero</span>];</div><div class="line">[<span class="keyword">self</span>.tableView setLayoutMargins:<span class="built_in">UIEdgeInsetsZero</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####在cell将要显示出来的方法中执行下面的代码<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> )tableView willDisplayCell:(<span class="built_in">UITableViewCell</span> )cell forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line">	[cell setSeparatorInset:<span class="built_in">UIEdgeInsetsZero</span>];</div><div class="line">	[cell setLayoutMargins:<span class="built_in">UIEdgeInsetsZero</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>###iOS隐藏导航栏正确做法</p>
<p>#####以往我们隐藏导航栏都是这样做：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated &#123;</div><div class="line">    [<span class="keyword">super</span> viewWillAppear:animated];</div><div class="line">   [<span class="keyword">self</span>.navigationController setNavigationBarHidden:<span class="literal">YES</span> animated:<span class="literal">YES</span>];</div><div class="line">&#125;</div><div class="line">-(<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated&#123;</div><div class="line">    [<span class="keyword">super</span> viewWillDisappear:animated];</div><div class="line">    [<span class="keyword">self</span>.navigationController setNavigationBarHidden:<span class="literal">NO</span> animated:<span class="literal">YES</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>#####但是往往这样 会遇到一些奇怪的 bug ，想来想去 我想到这样做可能要更好一点:<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated &#123;</div><div class="line">    [<span class="keyword">super</span> viewWillAppear:animated];</div><div class="line">    [<span class="keyword">self</span>.navigationController.view sendSubviewToBack:<span class="keyword">self</span>.navigationController.navigationBar];</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated&#123;</div><div class="line">    [<span class="keyword">super</span> viewWillDisappear:animated];</div><div class="line">    [<span class="keyword">self</span>.navigationController.view bringSubviewToFront:<span class="keyword">self</span>.navigationController.navigationBar];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#####iOS开发过程中一些小问题小技巧，代码片段。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;利用Safari打开一个链接&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *url = [&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:&lt;span class=&quot;string&quot;&gt;@&quot;http://baidu.com&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] openURL:url];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装多个Python版本</title>
    <link href="http://yoursite.com/2017/08/30/Mac%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AAPython%E7%89%88%E6%9C%AC/"/>
    <id>http://yoursite.com/2017/08/30/Mac安装多个Python版本/</id>
    <published>2017-08-30T01:52:58.000Z</published>
    <updated>2018-01-29T08:36:40.596Z</updated>
    
    <content type="html"><![CDATA[<p>######安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install pyenv</div></pre></td></tr></table></figure></p>
<p>######使用<br>```</p>
<p>#查看当前安装的版本<br>pyenv versions</p>
<p>#查看当前使用的版本<br>pyenv version</p>
<p>#安装python3.4.2版本<br>pyenv install -v 3.4.2</p>
<p>#卸载python3.4.2版本<br>pyenv uninstall 3.4.2</p>
<p>#设置全局的python版本<br>pyenv global 3.4.2</p>
<p>#设置面向程序的本地版本<br>pyenv local 3.4.2</p>
<p>#设置面向shell的python版本<br>pyenv shell 3.5.0</p>
<p>#使当前设置生效<br>exec $SHELL</p>
<p>#unset参数可以用于取消当前shell设定的版本<br>pyenv shell –unset</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;######安装&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用shadowsocks加速Mac自带终端或iTerm2</title>
    <link href="http://yoursite.com/2017/08/30/%E4%BD%BF%E7%94%A8shadowsocks%E5%8A%A0%E9%80%9FMac%E8%87%AA%E5%B8%A6%E7%BB%88%E7%AB%AF%E6%88%96iTerm2/"/>
    <id>http://yoursite.com/2017/08/30/使用shadowsocks加速Mac自带终端或iTerm2/</id>
    <published>2017-08-30T01:52:58.000Z</published>
    <updated>2018-01-29T08:41:05.534Z</updated>
    
    <content type="html"><![CDATA[<p>在命令行终端中输入如下命令后，该终端即可走代理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export http_proxy=http://127.0.0.1:1087;</div><div class="line">export https_proxy=http://127.0.0.1:1087;</div></pre></td></tr></table></figure></p>
<h6 id="注意：是当前终端标签页走代理，其他终端标签页或新窗口则不是！"><a href="#注意：是当前终端标签页走代理，其他终端标签页或新窗口则不是！" class="headerlink" title="注意：是当前终端标签页走代理，其他终端标签页或新窗口则不是！"></a>注意：是当前终端标签页走代理，其他终端标签页或新窗口则不是！</h6><p>取消命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">unset http_proxy</div><div class="line">unset https_proxy</div></pre></td></tr></table></figure></p>
<p>如果需要代理一直生效，则可以把上述两行代码添加到 ~/.bash_profile 文件最后。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim ~/.bash_profile</div><div class="line">-----------------------------------------------------</div><div class="line">export http_proxy=&apos;http://127.0.0.1:1087&apos;</div><div class="line">export https_proxy=&apos;http://127.0.0.1:1087&apos;</div><div class="line">-----------------------------------------------------</div></pre></td></tr></table></figure></p>
<p>使以上配置立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source  ~/.bash_profile</div></pre></td></tr></table></figure></p>
<p>还可以在 ~/.bash_profile 里加入开关函数，使用起来更方便。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function proxy_off()&#123;</div><div class="line">    unset http_proxy</div><div class="line">    unset https_proxy</div><div class="line">    echo -e &quot;已关闭代理&quot;</div><div class="line">&#125;</div><div class="line">function proxy_on() &#123;</div><div class="line">    export no_proxy=&quot;localhost,127.0.0.1,localaddress,.localdomain.com&quot;</div><div class="line">    export http_proxy=&quot;http://127.0.0.1:1087&quot;</div><div class="line">    export https_proxy=$http_proxy</div><div class="line">    echo -e &quot;已开启代理&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>测试当前终端标签/窗口是否走代理:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">➜  ~ git:(master) ✗ curl ip.gs</div><div class="line">Current IP / 当前 IP: 8.8.8.8</div><div class="line">ISP / 运营商:  linode.com</div><div class="line">City / 城市: Dallas Texas</div><div class="line">Country / 国家: United States</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在命令行终端中输入如下命令后，该终端即可走代理。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
</feed>
